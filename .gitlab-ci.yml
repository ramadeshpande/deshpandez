image: node:18

stages:
  - build
  - deploy

variables:
  AZURE_STATIC_WEB_APP_NAME: "journey"  # Replace with your Azure Static Web App name
  AZURE_RESOURCE_GROUP: "JRNY"  # Replace with your Azure Resource Group name
  AZURE_REGION: "eastus"  # Replace with the Azure Region of your Static Web App
  AZURE_STATIC_WEB_APPS_API_TOKEN: $AZURE_STATIC_WEB_APPS_API_TOKEN  # Set in GitLab CI/CD Secrets

cache:
  paths:
    - jrny-app/node_modules/

before_script:
  - npm install -g @angular/cli  # Install Angular CLI globally
  - apt-get update && apt-get install -y zip curl lsb-release
  - curl -sL https://aka.ms/InstallAzureCLIDeb | bash  # Install Azure CLI
  - az --version  # Verify Azure CLI installation

build:
  stage: build
  script:
    - cd jrny-app  # Ensure you're in the correct directory
    - npm install  # Install dependencies
    - ng build --configuration production  # Build the Angular app for production
    - ls dist/   # List files in dist folder to verify if it exists and contains output (ensure index.html exists)
    - zip -r dist/my-angular-app.zip dist/jrny-app/browser/  # Zip the correct build output (jrny-app/browser)
  artifacts:
    paths:
      - jrny-app/dist/
    expire_in: 1 hour   # Optional, set expiration for artifacts

deploy:
  stage: deploy
  image: node:18
  before_script:
    # Install the Azure Static Web Apps CLI (swa)
    - npm install -g @azure/static-web-apps-cli
    # Verify swa installation
    - swa --version
  script:
    # Set the API token as an environment variable and deploy using swa CLI
    - export SWA_CLI_DEPLOYMENT_TOKEN=${AZURE_STATIC_WEB_APPS_API_TOKEN}
    # Deploy using swa CLI (ensure correct path)
    - swa deploy ./jrny-app/dist/jrny-app/browser --env production   # Deploy from the correct path (jrny-app/browser)
  environment:
    name: production
  only:
    - main